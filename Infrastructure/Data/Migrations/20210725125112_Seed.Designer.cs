// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(BankContext))]
    [Migration("20210725125112_Seed")]
    partial class Seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Core.BankAccount.BankAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<uint>("AccountNumber")
                        .HasColumnType("int unsigned");

                    b.Property<string>("AccountType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("City")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PostalCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SortCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("BankAccounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22ba5f5a-ea83-4f19-8770-460e03345b5b"),
                            AccountNumber = 76024596u,
                            AccountType = "Personal",
                            AddressLine1 = "16 Wood Ave, Longbeach",
                            Balance = 1000.00m,
                            City = "Miami",
                            CurrencyCode = "USD",
                            FullName = "John Atkins",
                            PostalCode = "12345",
                            SortCode = "26-70-32"
                        },
                        new
                        {
                            Id = new Guid("68c1832a-a5a0-4f41-9016-72bbe00fb330"),
                            AccountNumber = 18227293u,
                            AccountType = "Company",
                            AddressLine1 = "16 Wood Ave, Essex",
                            Balance = 1000.00m,
                            City = "London",
                            CurrencyCode = "GBP",
                            FullName = "Richard Man",
                            PostalCode = "OXFN 109",
                            SortCode = "26-70-32"
                        },
                        new
                        {
                            Id = new Guid("a3ef7f9d-460b-4e9b-9896-132526762c24"),
                            AccountNumber = 11341209u,
                            AccountType = "Personal",
                            AddressLine1 = "16 Wood Ave, Longman",
                            Balance = 1000.00m,
                            City = "Norwich",
                            CurrencyCode = "USD",
                            FullName = "John Blade",
                            PostalCode = "12345",
                            SortCode = "26-70-32"
                        });
                });

            modelBuilder.Entity("Core.BankAccount.Files", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("BankAccountId")
                        .HasColumnType("char(36)");

                    b.Property<string>("FileReferences")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Core.BankAccount.Transfers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("DateOfTransfer")
                        .HasColumnType("datetime(6)");

                    b.Property<uint>("From")
                        .HasColumnType("int unsigned");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SortCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<uint>("To")
                        .HasColumnType("int unsigned");

                    b.HasKey("Id");

                    b.ToTable("Transfers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("322e31db-abe5-401b-9d47-8e364a43f89e"),
                            Amount = 150.00m,
                            CurrencyCode = "USD",
                            DateOfTransfer = new DateTime(2021, 7, 25, 14, 51, 12, 144, DateTimeKind.Local).AddTicks(2414),
                            From = 76024596u,
                            IsSuccessful = true,
                            SortCode = "26-70-32",
                            To = 11341209u
                        },
                        new
                        {
                            Id = new Guid("74f94028-ecf3-4ed7-afd5-e64ce6db9118"),
                            Amount = 150.00m,
                            CurrencyCode = "GBP",
                            DateOfTransfer = new DateTime(2021, 7, 25, 14, 51, 12, 144, DateTimeKind.Local).AddTicks(3972),
                            From = 11341209u,
                            IsSuccessful = false,
                            SortCode = "26-70-32",
                            To = 18227293u
                        });
                });

            modelBuilder.Entity("Core.BankAccount.Files", b =>
                {
                    b.HasOne("Core.BankAccount.BankAccount", "BankAccount")
                        .WithMany("FilesList")
                        .HasForeignKey("BankAccountId");
                });
#pragma warning restore 612, 618
        }
    }
}
